[{"/Users/lisla/IT-incubator/projects/SocialNetwork/src/index.tsx":"1","/Users/lisla/IT-incubator/projects/SocialNetwork/src/reportWebVitals.ts":"2","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/reduxStore.ts":"3","/Users/lisla/IT-incubator/projects/SocialNetwork/src/App.tsx":"4","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/usersReducer.ts":"5","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/authReducer.ts":"6","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/dialogsReducer.tsx":"7","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/profileReducer.tsx":"8","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/sidebarReducer.tsx":"9","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Navbar/Navbar.tsx":"10","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/News/News.tsx":"11","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Settings/Settings.tsx":"12","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Music/Music.tsx":"13","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx":"14","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileContainer.tsx":"15","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/UsersContainer.tsx":"16","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Header/HeaderContainer.tsx":"17","/Users/lisla/IT-incubator/projects/SocialNetwork/src/api/api.ts":"18","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/Profile.tsx":"19","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/Dialogs.tsx":"20","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/Users.tsx":"21","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Header/Header.tsx":"22","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx":"23","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/preloader/Preloader.tsx":"24","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"25","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/Message/Message.tsx":"26","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx":"27","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx":"28","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx":"29","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Login/Login.tsx":"30","/Users/lisla/IT-incubator/projects/SocialNetwork/src/hoc/withAuthRedirect.tsx":"31","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileStatus.tsx":"32","/Users/lisla/IT-incubator/projects/SocialNetwork/src/utils/validators/validators.ts":"33","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/FormsControls/FormsControl.tsx":"34","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/appReducer.ts":"35","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/usersSelector.ts":"36","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx":"37","/Users/lisla/IT-incubator/projects/SocialNetwork/src/utils/objectsHelper.ts":"38","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/paginator/Paginators.tsx":"39","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/User.tsx":"40","/Users/lisla/IT-incubator/projects/SocialNetwork/src/hoc/withSuspense.tsx":"41","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileDataForm.tsx":"42","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/Error404/Error404.tsx":"43"},{"size":640,"mtime":1632217050783,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1621416984878,"results":"46","hashOfConfig":"45"},{"size":1176,"mtime":1632210012277,"results":"47","hashOfConfig":"45"},{"size":3345,"mtime":1644226249699,"results":"48","hashOfConfig":"45"},{"size":4691,"mtime":1633523949862,"results":"49","hashOfConfig":"45"},{"size":3091,"mtime":1643279260333,"results":"50","hashOfConfig":"45"},{"size":2041,"mtime":1631690284482,"results":"51","hashOfConfig":"45"},{"size":5776,"mtime":1644238334651,"results":"52","hashOfConfig":"45"},{"size":718,"mtime":1628072843918,"results":"53","hashOfConfig":"45"},{"size":1149,"mtime":1643718764523,"results":"54","hashOfConfig":"45"},{"size":180,"mtime":1621416984872,"results":"55","hashOfConfig":"45"},{"size":158,"mtime":1621416984876,"results":"56","hashOfConfig":"45"},{"size":184,"mtime":1621416984871,"results":"57","hashOfConfig":"45"},{"size":1136,"mtime":1643796916599,"results":"58","hashOfConfig":"45"},{"size":2983,"mtime":1643290115949,"results":"59","hashOfConfig":"45"},{"size":3583,"mtime":1632207592339,"results":"60","hashOfConfig":"45"},{"size":1276,"mtime":1628686597410,"results":"61","hashOfConfig":"45"},{"size":2953,"mtime":1644324605868,"results":"62","hashOfConfig":"45"},{"size":1007,"mtime":1643958199301,"results":"63","hashOfConfig":"45"},{"size":2066,"mtime":1643810988822,"results":"64","hashOfConfig":"45"},{"size":1201,"mtime":1643894616447,"results":"65","hashOfConfig":"45"},{"size":847,"mtime":1643721776189,"results":"66","hashOfConfig":"45"},{"size":632,"mtime":1643810168845,"results":"67","hashOfConfig":"45"},{"size":272,"mtime":1621416984877,"results":"68","hashOfConfig":"45"},{"size":4072,"mtime":1643967932674,"results":"69","hashOfConfig":"45"},{"size":333,"mtime":1643810320779,"results":"70","hashOfConfig":"45"},{"size":946,"mtime":1628072767038,"results":"71","hashOfConfig":"45"},{"size":1864,"mtime":1643981860431,"results":"72","hashOfConfig":"45"},{"size":396,"mtime":1643980920219,"results":"73","hashOfConfig":"45"},{"size":3427,"mtime":1664373207410,"results":"74","hashOfConfig":"45"},{"size":782,"mtime":1621418639014,"results":"75","hashOfConfig":"45"},{"size":1591,"mtime":1627896617686,"results":"76","hashOfConfig":"45"},{"size":351,"mtime":1628250007489,"results":"77","hashOfConfig":"45"},{"size":761,"mtime":1644224075416,"results":"78","hashOfConfig":"45"},{"size":1817,"mtime":1644238595657,"results":"79","hashOfConfig":"45"},{"size":999,"mtime":1629185357787,"results":"80","hashOfConfig":"45"},{"size":1221,"mtime":1643964641582,"results":"81","hashOfConfig":"45"},{"size":400,"mtime":1631710273400,"results":"82","hashOfConfig":"45"},{"size":1831,"mtime":1643900977163,"results":"83","hashOfConfig":"45"},{"size":1817,"mtime":1643897933453,"results":"84","hashOfConfig":"45"},{"size":337,"mtime":1637243840692,"results":"85","hashOfConfig":"45"},{"size":2659,"mtime":1643982364363,"results":"86","hashOfConfig":"45"},{"size":289,"mtime":1644226679714,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1sw913o",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/lisla/IT-incubator/projects/SocialNetwork/src/index.tsx",[],["188","189"],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/reportWebVitals.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/reduxStore.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/App.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/usersReducer.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/authReducer.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/dialogsReducer.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/profileReducer.tsx",["190"],"import {PhotosType, profileAPI} from \"../api/api\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./reduxStore\";\nimport {ProfileDataFormType} from \"../components/Profile/ProfileInfo/ProfileDataForm\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {setAppError, SetAppErrorType, setError} from \"./appReducer\";\n\nconst ADD_POST = 'profile/ADD-POST';\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE';\nconst SET_USER_STATUS = 'profile/SET-USER-STATUS';\nconst DELETE_POST = 'profile/DELETE-POST';\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\n\nexport type InitialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: null | ProfileUserType\n    status: string\n\n}\nexport type PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\nexport type ContactsType = {\n    facebook: null | string\n    website: null | string\n    vk: null | string\n    twitter: null | string\n    instagram: null | string\n    youtube: null | string\n    github: null | string\n    mainLink: null | string\n}\nexport type ProfileUserType = {\n    aboutMe: {\n        aboutMe: null | string\n    }\n    contacts: ContactsType\n    fullName: string\n    lookingForAJob: boolean\n    lookingForAJobDescription: null | string\n    photos: {\n        small: null | string\n        large: null | string\n    }\n    userId: number\n}\n\ntype ActionsTypes =\n    ReturnType<typeof addPostActionCreator> |\n    ReturnType<typeof setUserProfile> |\n    ReturnType<typeof setUserStatus> |\n    ReturnType<typeof deletePost> |\n    ReturnType<typeof savePhotoSuccess> |\n    SetAppErrorType\n\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsTypes>\n\nconst initialState: InitialStateType = {\n    posts: [\n        {id: 1, message: 'Hi! How are you?', likesCount: 12},\n        {id: 2, message: \"It's my first post\", likesCount: 15},\n    ],\n    newPostText: '',\n    profile: null,\n    status: \"\"\n}\n\n// for this reducer state is state.profilePage, we give here only this part of state\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            const newPost: PostType = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                // newPostText: '',\n            };\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_USER_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            if (state.profile) {\n                return {\n                    ...state,\n                    profile: {...state.profile, photos: action.photos}\n                }\n            }\n            return {...state}\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText: string) => ({\n    type: ADD_POST,\n    newPostText\n} as const)\nexport const setUserProfile = (profile: ProfileUserType) => ({\n    type: SET_USER_PROFILE,\n    profile\n} as const)\nexport const setUserStatus = (status: string) => ({\n    type: SET_USER_STATUS,\n    status\n} as const)\nexport const deletePost = (postId: number) => ({\n    type: DELETE_POST,\n    postId\n} as const)\nexport const savePhotoSuccess = (photos: PhotosType) => ({\n    type: SAVE_PHOTO_SUCCESS,\n    photos\n} as const)\n\n\nexport const getUserProfile = (userId: number | null): ThunkType => {\n    return async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => { //thunk\n        const response = await profileAPI.getUserProfile(userId)\n        dispatch(setUserProfile(response))\n    }\n}\n\nexport const getUserStatus = (userId: number | null): ThunkType => {\n    return async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => { //thunk\n        const response = await profileAPI.getUserStatus(userId)\n        dispatch(setUserStatus(response.data))\n    }\n}\n\nexport const updateUserStatus = (status: string): ThunkType => {\n    return async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n        try {\n            const response = await profileAPI.updateUserStatus(status)\n            if (response.data.resultCode === 0) {\n                dispatch(setUserStatus(status))\n            }\n        } catch {\n            dispatch(setError(\"some error occurred\"))\n        }\n\n    }\n}\n\nexport const savePhoto = (file: File, userId: number | null): ThunkType => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data));\n        dispatch(getUserProfile(userId));\n    }\n}\n\nexport const saveProfile = (profile: ProfileDataFormType): ThunkType =>\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes | FormAction>, getState) => {\n        const userId = getState().auth.userId\n        const response = await profileAPI.saveProfile(profile);\n        if (response.data.resultCode === 0) {\n            dispatch(saveProfile(response.data.data));\n            dispatch(getUserProfile(userId));\n        } else {\n            dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\n            return Promise.reject(response.data.messages[0]);\n        }\n    }\n\n\nexport default profileReducer;","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/sidebarReducer.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Navbar/Navbar.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/News/News.tsx",["191"],"import React from \"react\";\nimport s from './News.module.css'\n\n\nfunction News(props: any) {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Settings/Settings.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Music/Music.tsx",["192"],"import React from \"react\";\nimport s from './Music.module.css'\n\n\nfunction Music(props: any) {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileContainer.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/UsersContainer.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Header/HeaderContainer.tsx",["193","194"],"import React from \"react\";\nimport {AppStateType} from \"../../Redux/reduxStore\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout, setAuthUserData} from \"../../Redux/authReducer\";\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n    login: string | null\n    userId: number | null\n    email: string | null\n}\ntype MapDispatchToPropsType = {\n    // getAuthUserData: (userId: number | null, email: string | null, login:string | null) => any\n    // getAuthUserData: () => any\n    logout: () => any\n}\nexport type HeaderAPIComponentPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nclass HeaderContainer extends React.Component<HeaderAPIComponentPropsType, AppStateType> {\n    // componentDidMount() {\n    //     this.props.getAuthUserData(this.props.userId, this.props.email, this.props.login)\n    // }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n    email: state.auth.email,\n    userId: state.auth.userId\n\n\n})\n\nexport default connect<MapStateToPropsType, MapDispatchToPropsType,{}, AppStateType >\n(mapStateToProps, {logout}) (HeaderContainer);","/Users/lisla/IT-incubator/projects/SocialNetwork/src/api/api.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/Profile.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/Dialogs.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/Users.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Header/Header.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/preloader/Preloader.tsx",["195"],"import loader from \"../../../assets/images/loader.gif\";\nimport React from \"react\";\n\ntype PreloaderPropsType = {\n\n}\n\nfunction Preloader(props: PreloaderPropsType) {\n    return (\n        <div>\n            <img src={loader}/>\n        </div>\n    )\n}\n\nexport default Preloader;","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["196"],"import React, {ChangeEvent, useState} from \"react\";\nimport s from './ProfileInfo.module.scss';\nimport Preloader from \"../../common/preloader/Preloader\";\nimport {ContactsType, ProfileUserType} from \"../../../Redux/profileReducer\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/User_icon.png\";\nimport ProfileDataForm, {ProfileDataFormType} from \"./ProfileDataForm\";\nimport styleBtn from \"../../../styles/common/Btn.module.scss\"\n\ntype PropsType = {\n    profile: null | ProfileUserType\n    status: string\n    updateUserStatus: (status: string) => any\n    isOwner: boolean\n    savePhoto: (e: any, userId: number | null) => void\n    authorizedUserId: number | null\n    saveProfile: (formData: ProfileDataFormType) => Promise<any>\n}\n\nfunction ProfileInfo(props: PropsType) {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    const onMainPhotoSelector = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files?.length) {\n            props.savePhoto(e.target.files[0], props.authorizedUserId)\n        }\n    }\n    const goToEditMode = () => setEditMode(true);\n    const onSubmit = (formData: ProfileDataFormType) => {\n        props.saveProfile(formData).then(\n            () => setEditMode(false)\n        )\n    }\n\n    return (\n        <div className={s.profileInfoContainer}>\n            <div>\n                <img className={s.mainPhoto} src={props.profile.photos.large ? props.profile.photos.large : userPhoto}/>\n                <div>\n                    {props.isOwner &&\n                    <div className={s.editImage}>\n                        <input type={\"file\"} name={\"file\"} id={\"file\"} onChange={onMainPhotoSelector} className={s.editImageInput}/>\n                        <label htmlFor=\"file\" className={styleBtn.btnSecondVariant}>Change Image</label>\n                    </div>\n                    }\n                </div>\n            </div>\n            <div>\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\n                {editMode ?\n                    <span> <ProfileDataForm onSubmit={onSubmit} profile={props.profile}\n                                            initialValues={props.profile}/> </span> :\n                    <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={goToEditMode}/>}\n            </div>\n        </div>\n\n    )\n}\n\ntype ContactsPropsType = {\n    contactTitle: string\n    contactValue: string | null\n}\nexport const Contact: React.FC<ContactsPropsType> = ({contactTitle, contactValue}) => {\n    return (\n        <div className={s.contacts}>\n            <span className={s.profileData}>{contactTitle}:</span> {contactValue}\n        </div>\n    )\n}\ntype ProfileDataType = {\n    profile: ProfileUserType\n    isOwner: boolean\n    goToEditMode: () => void\n}\n\n\nexport const ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div className={s.profileDataContainer}>\n            <div>Hi! My name is <span className={s.profileData}>{profile.fullName}</span></div>\n            <div>About me: <span className={s.profileData}> {profile.aboutMe}</span></div>\n            <div>Looking for a job: <span className={s.profileData}>{profile.lookingForAJob ? \"yes\" : \"no\"}</span></div>\n            {profile.lookingForAJob &&\n            <div>My professional skills: <span className={s.profileData}>{profile.lookingForAJobDescription}</span>\n            </div>}\n            <div className={s.contactsContainer}> {Object\n                .keys(profile.contacts)\n                .map((key) => {\n                    return <Contact contactTitle={key} key={key}\n                                    contactValue={profile.contacts[key as keyof ContactsType]}/>\n                })}</div>\n            {isOwner && <div>\n                <button onClick={goToEditMode} className={styleBtn.btnSecondVariant}>Edit Profile</button>\n            </div>}\n        </div>\n    )\n\n}\n\n\nexport default ProfileInfo;","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Dialogs/Message/Message.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx",["197"],"import React from \"react\";\n\nimport {addPostActionCreator, PostType,\n} from \"../../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\ntype MapDispatchToPropsType = {\n\n    addPost: (newText: string) => void\n}\n\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType  => ({\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.posts\n})\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => ({\n    addPost: (newPostText: string) => {\n        dispatch(addPostActionCreator(newPostText));\n    }\n})\n\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Login/Login.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/hoc/withAuthRedirect.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileStatus.tsx",["198","199"],"import React, {ChangeEvent} from \"react\";\nimport s from './ProfileInfo.module.css';\nimport {setUserStatus} from \"../../../Redux/profileReducer\";\n\n\ntype PropsType = {\n    status: string\n    updateUserStatus: (status: string) => any\n}\n\nclass ProfileStatus extends React.Component<PropsType> {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode = () =>  {\n        this.setState({\n            editMode: true\n        })\n    }\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false,\n        })\n        this.props.updateUserStatus(this.state.status)\n    }\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n\n}\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<any>, snapshot?: any) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input  onChange={this.onStatusChange} autoFocus={true} value={this.state.status} onBlur={this.deactivateEditMode }/>\n                </div>\n                }\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default ProfileStatus;",["200","201"],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/utils/validators/validators.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/FormsControls/FormsControl.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/appReducer.ts",["202"],"import React from \"react\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./reduxStore\";\nimport {getAuthUserData} from \"./authReducer\";\n\ntype AppInitializedType = typeof initialState\ntype SetInitializedActionType = ReturnType<typeof initializedSuccessAC>\nexport type SetAppErrorType = ReturnType<typeof setAppError>\ntype ActionsType = SetInitializedActionType | SetAppErrorType\n\nconst INITIALIZED_SUCCESS = \"APP/INITIALIZED_SUCCESS\";\nconst SET_APP_ERROR = \"APP/SET_APP_ERROR\"\n\nlet initialState = {\n    initialized: false,\n    error: null as null | string\n}\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\n\nconst appReducer = (state: AppInitializedType = initialState, action: ActionsType): AppInitializedType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        case SET_APP_ERROR:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state\n\n    }\n}\n\n\nexport const initializedSuccessAC = () => ({\n    type: INITIALIZED_SUCCESS\n} as const)\n\nexport const setAppError = (error: null | string) => ({\n    type: SET_APP_ERROR,\n    error\n} as const)\n\nexport const initializeApp = (): ThunkType =>\n    (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n        let promise = dispatch(getAuthUserData())\n        promise.then(() => {\n            dispatch(initializedSuccessAC())\n        })\n}\nexport const setError = (error: null | string):ThunkType =>\n    (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>)  => {\n        dispatch(setAppError(error));\n        alert(error);\n        dispatch(setAppError(null));\n}\nexport default appReducer;\n\n\n\n\n\n","/Users/lisla/IT-incubator/projects/SocialNetwork/src/Redux/usersSelector.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx",["203"],"import React, {ChangeEvent, FC, useEffect, useState} from \"react\";\nimport s from \"./ProfileStatusWithHooks.module.scss\"\n\ntype PropsType = {\n    status: string\n    updateUserStatus: (status: string) => any\n}\n\nconst ProfileStatusWithHooks = (props: PropsType) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => setEditMode(true);\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateUserStatus(status)\n    }\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.statusContainer}>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}\n                />\n            </div>\n            }\n\n        </div>\n    )\n\n\n}\n\nexport default ProfileStatusWithHooks;","/Users/lisla/IT-incubator/projects/SocialNetwork/src/utils/objectsHelper.ts",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/paginator/Paginators.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Users/User.tsx",["204"],"import React from \"react\";\nimport styles from \"./User.module.scss\";\nimport userPhoto from \"../../assets/images/User_icon.png\";\nimport {UserType} from \"../../Redux/usersReducer\";\nimport {NavLink} from \"react-router-dom\";\nimport styleBtn from '../../styles/common/Btn.module.scss'\n\n\nexport type UserPropsType = {\n    user: UserType\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    followingInProgress: Array<number>\n}\n\nfunction User({user, followingInProgress, unfollow, follow}: UserPropsType) {\n\n    return (\n        <div className={styles.userContainer}>\n            <div className={styles.userBlock}>\n                <NavLink to={'/profile/' + user.id}>\n                    <img src={user.photos.small ? user.photos.small : userPhoto} className={styles.userPhoto}/>\n                </NavLink>\n                <span className={styles.userInfo}>\n                    <div className={styles.userName}>{user.name}</div>\n                    <div className={styles.userStatus}>{user.status}</div>\n                    <div>\n                {user.followed\n                    ? <button className={styleBtn.btn}\n                              disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  unfollow(user.id);\n                              }}>Unfollow\n                    </button>\n                    : <button className={styleBtn.btn}\n                              disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  follow(user.id);\n                              }}>Follow\n                    </button>}\n            </div>\n                </span>\n\n            </div>\n\n\n        </div>\n\n\n    )\n}\n\nexport default User","/Users/lisla/IT-incubator/projects/SocialNetwork/src/hoc/withSuspense.tsx",["205"],"import React, {Component, ComponentType} from \"react\";\nimport Preloader from \"../components/common/preloader/Preloader\";\n\n\nexport function withSuspense<T>(Component: ComponentType<T>) {\n    return (props:any) => {\n        return <React.Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </React.Suspense>}\n\n}\n\n","/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/Profile/ProfileInfo/ProfileDataForm.tsx",[],"/Users/lisla/IT-incubator/projects/SocialNetwork/src/components/common/Error404/Error404.tsx",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":20},{"ruleId":"210","severity":1,"message":"214","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":9},{"ruleId":"210","severity":1,"message":"214","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":9},{"ruleId":"210","severity":1,"message":"215","line":5,"column":9,"nodeType":"212","messageId":"213","endLine":5,"endColumn":24},{"ruleId":"210","severity":1,"message":"216","line":5,"column":34,"nodeType":"212","messageId":"213","endLine":5,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":11,"column":13,"nodeType":"219","endLine":11,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":41,"column":17,"nodeType":"219","endLine":41,"endColumn":121},{"ruleId":"210","severity":1,"message":"220","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"214","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":9},{"ruleId":"210","severity":1,"message":"221","line":3,"column":9,"nodeType":"212","messageId":"213","endLine":3,"endColumn":22},{"ruleId":"206","replacedBy":"222"},{"ruleId":"208","replacedBy":"223"},{"ruleId":"210","severity":1,"message":"220","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"224","line":1,"column":29,"nodeType":"212","messageId":"213","endLine":1,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":22,"column":21,"nodeType":"219","endLine":22,"endColumn":112},{"ruleId":"210","severity":1,"message":"225","line":1,"column":16,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"@typescript-eslint/no-unused-vars","'setAppError' is defined but never used.","Identifier","unusedVar","'s' is defined but never used.","'getAuthUserData' is defined but never used.","'setAuthUserData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'setUserStatus' is defined but never used.",["226"],["227"],"'FC' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]