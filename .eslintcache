[{"/Volumes/data/projects/courses/SocialNetwork/src/index.tsx":"1","/Volumes/data/projects/courses/SocialNetwork/src/reportWebVitals.ts":"2","/Volumes/data/projects/courses/SocialNetwork/src/Redux/reduxStore.ts":"3","/Volumes/data/projects/courses/SocialNetwork/src/App.tsx":"4","/Volumes/data/projects/courses/SocialNetwork/src/Redux/profileReducer.tsx":"5","/Volumes/data/projects/courses/SocialNetwork/src/Redux/dialogsReducer.tsx":"6","/Volumes/data/projects/courses/SocialNetwork/src/Redux/sidebarReducer.tsx":"7","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/Profile.tsx":"8","/Volumes/data/projects/courses/SocialNetwork/src/components/Header/Header.tsx":"9","/Volumes/data/projects/courses/SocialNetwork/src/components/Navbar/Navbar.tsx":"10","/Volumes/data/projects/courses/SocialNetwork/src/components/Settings/Settings.tsx":"11","/Volumes/data/projects/courses/SocialNetwork/src/components/News/News.tsx":"12","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx":"13","/Volumes/data/projects/courses/SocialNetwork/src/components/Music/Music.tsx":"14","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Dialogs.tsx":"15","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"16","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx":"17","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx":"18","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Message/Message.tsx":"19","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx":"20","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx":"21","/Volumes/data/projects/courses/SocialNetwork/src/components/Users/Users.tsx":"22","/Volumes/data/projects/courses/SocialNetwork/src/Redux/usersReducer.ts":"23","/Volumes/data/projects/courses/SocialNetwork/src/components/Users/UsersContainer.tsx":"24"},{"size":929,"mtime":1616661670000,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1612257234000,"results":"27","hashOfConfig":"26"},{"size":860,"mtime":1616765777000,"results":"28","hashOfConfig":"26"},{"size":1691,"mtime":1616766192000,"results":"29","hashOfConfig":"26"},{"size":1604,"mtime":1616679979000,"results":"30","hashOfConfig":"26"},{"size":2499,"mtime":1616679448000,"results":"31","hashOfConfig":"26"},{"size":854,"mtime":1616589477000,"results":"32","hashOfConfig":"26"},{"size":358,"mtime":1616590496000,"results":"33","hashOfConfig":"26"},{"size":287,"mtime":1612343309000,"results":"34","hashOfConfig":"26"},{"size":1425,"mtime":1616062184000,"results":"35","hashOfConfig":"26"},{"size":158,"mtime":1612781495000,"results":"36","hashOfConfig":"26"},{"size":180,"mtime":1612781016000,"results":"37","hashOfConfig":"26"},{"size":1114,"mtime":1616590373000,"results":"38","hashOfConfig":"26"},{"size":184,"mtime":1612781102000,"results":"39","hashOfConfig":"26"},{"size":1575,"mtime":1616678546000,"results":"40","hashOfConfig":"26"},{"size":445,"mtime":1612949577000,"results":"41","hashOfConfig":"26"},{"size":567,"mtime":1616061843000,"results":"42","hashOfConfig":"26"},{"size":1133,"mtime":1616680290000,"results":"43","hashOfConfig":"26"},{"size":657,"mtime":1616677814000,"results":"44","hashOfConfig":"26"},{"size":1199,"mtime":1616590496000,"results":"45","hashOfConfig":"26"},{"size":508,"mtime":1616061843000,"results":"46","hashOfConfig":"26"},{"size":2359,"mtime":1617193130000,"results":"47","hashOfConfig":"26"},{"size":1722,"mtime":1617192654000,"results":"48","hashOfConfig":"26"},{"size":1187,"mtime":1616766170000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hakrxo",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"/Volumes/data/projects/courses/SocialNetwork/src/index.tsx",[],["112","113"],"/Volumes/data/projects/courses/SocialNetwork/src/reportWebVitals.ts",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/reduxStore.ts",["114"],"import {combineReducers, createStore, Store} from \"redux\";\nimport profileReducer, { ProfilePageType} from \"./profileReducer\";\nimport dialogsReducer, {DialogsPageType} from \"./dialogsReducer\";\nimport sidebarReducer, {SidebarType} from \"./sidebarReducer\";\nimport usersReducer from \"./usersReducer\";\n\n\n//\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n    sidebar: SidebarType\n}\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer\n})\n\n\nexport type AppStateType = ReturnType<typeof rootReducer> //typeof - return type of function,\n// ReturnType<typeof rootReducer> return type of function return\n\nlet store = createStore(rootReducer);\n\n\n//let store : Store= createStore(rootReducer);\n\nexport default store;","/Volumes/data/projects/courses/SocialNetwork/src/App.tsx",["115"],"import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\n\n\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {RootStateType} from \"./Redux/reduxStore\";\nimport Users from \"./components/Users/Users\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\ntype AppPropsType = {\n     state: RootStateType\n}\n\n\n\n\n\nfunction App(props: AppPropsType) {\n    return (\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar\n                     state = {props.state.sidebar.friends}\n                />\n                <div className={'app-wrapper-content'}>\n                    <Route path={'/profile'}\n                           render={ () => <Profile\n                           />\n                           }\n                    />\n                    <Route path ={'/dialogs'}\n                           render={() =>  <DialogsContainer\n                           />}/>\n                    <Route path ={'/users'}\n                           render={() =>  <UsersContainer/>\n                           }/>\n\n                    <Route path ={'/news'} render={() =>  <News />}/>\n                    <Route path ={'/music'} render={() =>  <Music />}/>\n                    <Route path ={'/settings'} render={() =>  <Settings />}/>\n\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","/Volumes/data/projects/courses/SocialNetwork/src/Redux/profileReducer.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/dialogsReducer.tsx",["116"],"\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\ntype ActionsTypes =\n    ReturnType<typeof updateNewMessageBodyCreator>\n    | ReturnType<typeof sendMessageCreator>\n\nexport type DialogsPageType = {\n    messages: Array<MessageType>\n    dialogs: Array<DialogsType>\n    newMessageBody: string\n}\nexport type DialogsType = {\n    name: string\n    id: number\n    avatar: string\n}\nexport type MessageType = {\n    id: number\n    message: string}\n\nconst initialState: DialogsPageType = {\n        messages: [\n            {id: 1, message: 'Hi!'},\n            {id: 2, message: 'How are you?'},\n            {id: 3, message: 'Yo!'},\n        ],\n        newMessageBody: '',\n        dialogs: [\n            {id: 1, name: 'Lisa', avatar: 'https://pets2.me/media/res/1/3/1/9/2/13192.ozimro.300.jpg'},\n            {\n                id: 2,\n                name: 'Bob',\n                avatar: 'https://cs4.pikabu.ru/post_img/big/2015/06/27/6/1435397110_577794048.png'\n            },\n            {id: 3, name: 'Jane', avatar: 'https://sun9-14.userapi.com/c698/u89838553/113490960/x_ff0ef64c.jpg'},\n            {\n                id: 4,\n                name: 'Mary',\n                avatar: 'https://images11.esquire.ru/upload/custom/c41/c41ba98ac9188061e2b0952cdcab9b71.jpg'\n            },\n            {id: 5, name: 'Jack', avatar: 'https://img.gazeta.ru/files3/837/5731837/bat-pic668-668x444-36724.jpg'},\n        ],\n    };\n\n// for this reducer state is state.dialogsPage, we give here only this part of state.\n// It's important to give a type oe return of function\nconst dialogsReducer = (state:DialogsPageType = initialState, action: ActionsTypes): DialogsPageType => {\n    let stateCopy = {\n        ...state,\n        messages:  [...state.messages]\n    };\n\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return {\n                ...state,\n                newMessageBody: action.body\n            };\n\n        case SEND_MESSAGE: {\n            let body = state.newMessageBody\n            return {\n                ...state,\n                messages:  [...state.messages, {id: 6, message: body}],\n                newMessageBody:  ''\n            };\n        }\n\n        default:\n            return state;\n    }\n\n\n}\n\nexport const updateNewMessageBodyCreator = (body: string) => ({\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n}) as const\nexport const sendMessageCreator = () => ({\n    type: SEND_MESSAGE,\n}) as const\n\nexport default dialogsReducer;","/Volumes/data/projects/courses/SocialNetwork/src/Redux/sidebarReducer.tsx",["117","118","119","120"],"\nimport {DialogsType, sendMessageCreator, updateNewMessageBodyCreator} from \"./dialogsReducer\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"./profileReducer\";\n\nexport type SidebarType = {\n    friends: Array<DialogsType>\n}\ntype ActionsTypes = any\n\n\nconst initialState: SidebarType = {\n    friends: [\n        {id: 1, name: 'Lisa', avatar: 'https://pets2.me/media/res/1/3/1/9/2/13192.ozimro.300.jpg'},\n        {\n            id: 2,\n            name: 'Bob',\n            avatar: 'https://cs4.pikabu.ru/post_img/big/2015/06/27/6/1435397110_577794048.png'\n        },\n        {id: 3, name: 'Jane', avatar: 'https://sun9-14.userapi.com/c698/u89838553/113490960/x_ff0ef64c.jpg'},\n    ]\n\n};\n\nconst sidebarReducer= (state: SidebarType = initialState, action: ActionsTypes): SidebarType => {\n\n    return state;\n}\n\nexport default sidebarReducer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/Profile.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Header/Header.tsx",["121"],"import React from 'react';\nimport s from './Header.module.css';\n\nfunction Header() {\n    return (\n        <header className= {s.header}>\n            <img src='https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg'/>\n        </header>\n    )\n}\nexport default Header;","/Volumes/data/projects/courses/SocialNetwork/src/components/Navbar/Navbar.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Settings/Settings.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/News/News.tsx",["122"],"import React from \"react\";\nimport s from './News.module.css'\n\n\nfunction News(props: any) {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx",["123"],"import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {DialogsPageType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\ntype MapDispatchToPropsType = {\n    updateNewMessageBody: (body: string) => void\n    onSendMessage: () => void\n}\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => { //state of all application\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => { //dispatch: Dispatch(from Redux)\n    return {\n        updateNewMessageBody: (body: string) => {\n            dispatch(updateNewMessageBodyCreator(body))},\n        onSendMessage: () => dispatch(sendMessageCreator()),\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Music/Music.tsx",["124"],"import React from \"react\";\nimport s from './Music.module.css'\n\n\nfunction Music(props: any) {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Dialogs.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["125"],"import React from \"react\";\nimport s from './ProfileInfo.module.css';\n\nfunction ProfileInfo(props: any) {\n    return (\n        <div>\n            <div>\n                <img\n                    src='https://kids.sandiegozoo.org/sites/default/files/2019-01/animal-hero-arcticfoxe.jpg'/>\n            </div>\n            <div className={s.descriptionBlock}>\n                ava+disk\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx",["126"],"import React from \"react\";\n\nimport {addPostActionCreator, PostType,\n    updateNewPostTextActionCreator\n} from \"../../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\ntype MapDispatchToPropsType = {\n    updateNewPostText: (newText: string) => void\n    addPost: (newText: string) => void\n}\n\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType  => ({\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.posts\n})\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => ({\n    updateNewPostText: (newText: string) => {\n        dispatch(updateNewPostTextActionCreator(newText));\n    },\n    addPost: (newText: string) => {\n        dispatch(addPostActionCreator(newText));\n    }\n})\n\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Message/Message.tsx",["127","128"],"import React from \"react\";\nimport s from \"../Dialogs.module.css\";\nimport {MessageType} from \"../../../Redux/dialogsReducer\";\n\n\nfunction Message(props: MessageType) {\n    let newMessageElement = React.createRef<HTMLTextAreaElement>();\n    let addMessage = () => {\n       let text =  newMessageElement.current?.value;\n    }\n    return (\n\n        <div className={s.message}>\n            <div>\n                {props.message}\n            </div>\n            {/*<div>*/}\n            {/*<textarea ref = {addMessage}></textarea>*/}\n            {/*<button onClick={addMessage}>Add</button>*/}\n            {/*</div>*/}\n        </div>\n    )\n\n}\n\nexport default Message;","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx",["129"],"import React from \"react\";\nimport s from './Post.module.css';\nimport {PostType} from \"../../../../Redux/profileReducer\";\n\n\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.item}>\n            <img\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTCgPWBtcWfGpFd3n6ma11amy6vQwYYZ8oj9A&usqp=CAU'/>\n            {props.message}\n            <div>\n                <span>like </span> {props.likesCount}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Post;","/Volumes/data/projects/courses/SocialNetwork/src/components/Users/Users.tsx",["130"],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/usersReducer.ts",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Users/UsersContainer.tsx",["131","132"],"import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../Redux/reduxStore\";\nimport {followAC, setUsersAC, unfollowAC, UsersPageType, UserType} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\n\ntype MapStateToPropsType = {\n    users: Array<UserType>\n}\ntype MapDispatchToPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (users: any) => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => { //state of all application\n    return {\n        users: state.usersPage.users\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => { //dispatch: Dispatch(from Redux)\n    return {\n        follow: (userID: number) => {\n            dispatch(followAC(userID));\n        },\n       unfollow: (userID: number) => {\n            dispatch(unfollowAC(userID));\n        },\n        setUsers: (users: Array<UserType>) => {\n            dispatch(setUsersAC(users));\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":39,"nodeType":"139","messageId":"140","endLine":1,"endColumn":44},{"ruleId":"137","severity":1,"message":"141","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":13},{"ruleId":"137","severity":1,"message":"142","line":51,"column":9,"nodeType":"139","messageId":"140","endLine":51,"endColumn":18},{"ruleId":"137","severity":1,"message":"143","line":2,"column":22,"nodeType":"139","messageId":"140","endLine":2,"endColumn":40},{"ruleId":"137","severity":1,"message":"144","line":2,"column":42,"nodeType":"139","messageId":"140","endLine":2,"endColumn":69},{"ruleId":"137","severity":1,"message":"145","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":29},{"ruleId":"137","severity":1,"message":"146","line":3,"column":31,"nodeType":"139","messageId":"140","endLine":3,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":7,"column":13,"nodeType":"149","endLine":7,"endColumn":102},{"ruleId":"137","severity":1,"message":"150","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":9},{"ruleId":"137","severity":1,"message":"151","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"150","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":9},{"ruleId":"147","severity":1,"message":"148","line":8,"column":17,"nodeType":"149","endLine":9,"endColumn":112},{"ruleId":"137","severity":1,"message":"151","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"152","line":8,"column":9,"nodeType":"139","messageId":"140","endLine":8,"endColumn":19},{"ruleId":"137","severity":1,"message":"153","line":9,"column":12,"nodeType":"139","messageId":"140","endLine":9,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":10,"column":13,"nodeType":"149","endLine":11,"endColumn":124},{"ruleId":"147","severity":1,"message":"148","line":28,"column":29,"nodeType":"149","endLine":28,"endColumn":140},{"ruleId":"137","severity":1,"message":"151","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"154","line":5,"column":43,"nodeType":"139","messageId":"140","endLine":5,"endColumn":56},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'stateCopy' is assigned a value but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'s' is defined but never used.","'React' is defined but never used.","'addMessage' is assigned a value but never used.","'text' is assigned a value but never used.","'UsersPageType' is defined but never used.","no-global-assign","no-unsafe-negation"]