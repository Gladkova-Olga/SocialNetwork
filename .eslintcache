[{"/Volumes/data/projects/courses/SocialNetwork/src/index.tsx":"1","/Volumes/data/projects/courses/SocialNetwork/src/reportWebVitals.ts":"2","/Volumes/data/projects/courses/SocialNetwork/src/Redux/reduxStore.ts":"3","/Volumes/data/projects/courses/SocialNetwork/src/App.tsx":"4","/Volumes/data/projects/courses/SocialNetwork/src/Redux/profileReducer.tsx":"5","/Volumes/data/projects/courses/SocialNetwork/src/Redux/dialogsReducer.tsx":"6","/Volumes/data/projects/courses/SocialNetwork/src/Redux/sidebarReducer.tsx":"7","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/Profile.tsx":"8","/Volumes/data/projects/courses/SocialNetwork/src/components/Header/Header.tsx":"9","/Volumes/data/projects/courses/SocialNetwork/src/components/Navbar/Navbar.tsx":"10","/Volumes/data/projects/courses/SocialNetwork/src/components/Settings/Settings.tsx":"11","/Volumes/data/projects/courses/SocialNetwork/src/components/News/News.tsx":"12","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx":"13","/Volumes/data/projects/courses/SocialNetwork/src/components/Music/Music.tsx":"14","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Dialogs.tsx":"15","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"16","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx":"17","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx":"18","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Message/Message.tsx":"19","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx":"20","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx":"21","/Volumes/data/projects/courses/SocialNetwork/src/Redux/usersReducer.ts":"22","/Volumes/data/projects/courses/SocialNetwork/src/components/Users/UsersContainer.tsx":"23","/Volumes/data/projects/courses/SocialNetwork/src/components/Users/Users.tsx":"24","/Volumes/data/projects/courses/SocialNetwork/src/components/common/preloader/Preloader.tsx":"25","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileContainer.tsx":"26","/Volumes/data/projects/courses/SocialNetwork/src/Redux/authReducer.ts":"27","/Volumes/data/projects/courses/SocialNetwork/src/components/Header/HeaderContainer.tsx":"28"},{"size":929,"mtime":1616661670000,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1612257234000,"results":"31","hashOfConfig":"30"},{"size":928,"mtime":1618818254000,"results":"32","hashOfConfig":"30"},{"size":1571,"mtime":1618819657000,"results":"33","hashOfConfig":"30"},{"size":2159,"mtime":1618394445000,"results":"34","hashOfConfig":"30"},{"size":2499,"mtime":1616679448000,"results":"35","hashOfConfig":"30"},{"size":854,"mtime":1616589477000,"results":"36","hashOfConfig":"30"},{"size":493,"mtime":1618394445000,"results":"37","hashOfConfig":"30"},{"size":666,"mtime":1618823912000,"results":"38","hashOfConfig":"30"},{"size":1568,"mtime":1617272309000,"results":"39","hashOfConfig":"30"},{"size":158,"mtime":1612781495000,"results":"40","hashOfConfig":"30"},{"size":180,"mtime":1612781016000,"results":"41","hashOfConfig":"30"},{"size":1114,"mtime":1616590373000,"results":"42","hashOfConfig":"30"},{"size":184,"mtime":1612781102000,"results":"43","hashOfConfig":"30"},{"size":1575,"mtime":1616678546000,"results":"44","hashOfConfig":"30"},{"size":833,"mtime":1618404600000,"results":"45","hashOfConfig":"30"},{"size":567,"mtime":1616061843000,"results":"46","hashOfConfig":"30"},{"size":1133,"mtime":1616680290000,"results":"47","hashOfConfig":"30"},{"size":657,"mtime":1616677814000,"results":"48","hashOfConfig":"30"},{"size":1199,"mtime":1616590496000,"results":"49","hashOfConfig":"30"},{"size":508,"mtime":1616061843000,"results":"50","hashOfConfig":"30"},{"size":2763,"mtime":1618237456000,"results":"51","hashOfConfig":"30"},{"size":4153,"mtime":1618819441000,"results":"52","hashOfConfig":"30"},{"size":2419,"mtime":1618381524000,"results":"53","hashOfConfig":"30"},{"size":272,"mtime":1618226599000,"results":"54","hashOfConfig":"30"},{"size":1592,"mtime":1618406748000,"results":"55","hashOfConfig":"30"},{"size":913,"mtime":1618821399000,"results":"56","hashOfConfig":"30"},{"size":1367,"mtime":1618824099000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"hakrxo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/data/projects/courses/SocialNetwork/src/index.tsx",[],["127","128"],"/Volumes/data/projects/courses/SocialNetwork/src/reportWebVitals.ts",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/reduxStore.ts",["129"],"import {combineReducers, createStore, Store} from \"redux\";\nimport profileReducer, { InitialStateType} from \"./profileReducer\";\nimport dialogsReducer, {DialogsPageType} from \"./dialogsReducer\";\nimport sidebarReducer, {SidebarType} from \"./sidebarReducer\";\nimport usersReducer from \"./usersReducer\";\nimport {authReducer} from \"./authReducer\";\n\n\n//\nexport type RootStateType = {\n    profilePage: InitialStateType\n    dialogsPage: DialogsPageType\n    sidebar: SidebarType\n}\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer\n})\n\n\nexport type AppStateType = ReturnType<typeof rootReducer> //typeof - return type of function,\n// ReturnType<typeof rootReducer> return type of function return\n\nlet store = createStore(rootReducer);\n\n\n//let store : Store= createStore(rootReducer);\n\nexport default store;","/Volumes/data/projects/courses/SocialNetwork/src/App.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/profileReducer.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/dialogsReducer.tsx",["130"],"\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\ntype ActionsTypes =\n    ReturnType<typeof updateNewMessageBodyCreator>\n    | ReturnType<typeof sendMessageCreator>\n\nexport type DialogsPageType = {\n    messages: Array<MessageType>\n    dialogs: Array<DialogsType>\n    newMessageBody: string\n}\nexport type DialogsType = {\n    name: string\n    id: number\n    avatar: string\n}\nexport type MessageType = {\n    id: number\n    message: string}\n\nconst initialState: DialogsPageType = {\n        messages: [\n            {id: 1, message: 'Hi!'},\n            {id: 2, message: 'How are you?'},\n            {id: 3, message: 'Yo!'},\n        ],\n        newMessageBody: '',\n        dialogs: [\n            {id: 1, name: 'Lisa', avatar: 'https://pets2.me/media/res/1/3/1/9/2/13192.ozimro.300.jpg'},\n            {\n                id: 2,\n                name: 'Bob',\n                avatar: 'https://cs4.pikabu.ru/post_img/big/2015/06/27/6/1435397110_577794048.png'\n            },\n            {id: 3, name: 'Jane', avatar: 'https://sun9-14.userapi.com/c698/u89838553/113490960/x_ff0ef64c.jpg'},\n            {\n                id: 4,\n                name: 'Mary',\n                avatar: 'https://images11.esquire.ru/upload/custom/c41/c41ba98ac9188061e2b0952cdcab9b71.jpg'\n            },\n            {id: 5, name: 'Jack', avatar: 'https://img.gazeta.ru/files3/837/5731837/bat-pic668-668x444-36724.jpg'},\n        ],\n    };\n\n// for this reducer state is state.dialogsPage, we give here only this part of state.\n// It's important to give a type oe return of function\nconst dialogsReducer = (state:DialogsPageType = initialState, action: ActionsTypes): DialogsPageType => {\n    let stateCopy = {\n        ...state,\n        messages:  [...state.messages]\n    };\n\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return {\n                ...state,\n                newMessageBody: action.body\n            };\n\n        case SEND_MESSAGE: {\n            let body = state.newMessageBody\n            return {\n                ...state,\n                messages:  [...state.messages, {id: 6, message: body}],\n                newMessageBody:  ''\n            };\n        }\n\n        default:\n            return state;\n    }\n\n\n}\n\nexport const updateNewMessageBodyCreator = (body: string) => ({\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n}) as const\nexport const sendMessageCreator = () => ({\n    type: SEND_MESSAGE,\n}) as const\n\nexport default dialogsReducer;","/Volumes/data/projects/courses/SocialNetwork/src/Redux/sidebarReducer.tsx",["131","132","133","134"],"\nimport {DialogsType, sendMessageCreator, updateNewMessageBodyCreator} from \"./dialogsReducer\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"./profileReducer\";\n\nexport type SidebarType = {\n    friends: Array<DialogsType>\n}\ntype ActionsTypes = any\n\n\nconst initialState: SidebarType = {\n    friends: [\n        {id: 1, name: 'Lisa', avatar: 'https://pets2.me/media/res/1/3/1/9/2/13192.ozimro.300.jpg'},\n        {\n            id: 2,\n            name: 'Bob',\n            avatar: 'https://cs4.pikabu.ru/post_img/big/2015/06/27/6/1435397110_577794048.png'\n        },\n        {id: 3, name: 'Jane', avatar: 'https://sun9-14.userapi.com/c698/u89838553/113490960/x_ff0ef64c.jpg'},\n    ]\n\n};\n\nconst sidebarReducer= (state: SidebarType = initialState, action: ActionsTypes): SidebarType => {\n\n    return state;\n}\n\nexport default sidebarReducer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/Profile.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Header/Header.tsx",["135"],"/Volumes/data/projects/courses/SocialNetwork/src/components/Navbar/Navbar.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Settings/Settings.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/News/News.tsx",["136"],"import React from \"react\";\nimport s from './News.module.css'\n\n\nfunction News(props: any) {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogsContainer.tsx",["137"],"import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {DialogsPageType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\ntype MapDispatchToPropsType = {\n    updateNewMessageBody: (body: string) => void\n    onSendMessage: () => void\n}\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => { //state of all application\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => { //dispatch: Dispatch(from Redux)\n    return {\n        updateNewMessageBody: (body: string) => {\n            dispatch(updateNewMessageBodyCreator(body))},\n        onSendMessage: () => dispatch(sendMessageCreator()),\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Music/Music.tsx",["138"],"import React from \"react\";\nimport s from './Music.module.css'\n\n\nfunction Music(props: any) {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Dialogs.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["139","140"],"import React from \"react\";\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/Preloader\";\nimport {ProfileUserType} from \"../../../Redux/profileReducer\";\ntype PropsType = {\n    profile: null | ProfileUserType\n}\nfunction ProfileInfo(props: PropsType) {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n                <img\n                    src='https://kids.sandiegozoo.org/sites/default/files/2019-01/animal-hero-arcticfoxe.jpg'/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large ? props.profile.photos.large: ''}/>\n                {props.profile.fullName}\n                {props.profile.aboutMe}\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPostsContainer.tsx",["141"],"import React from \"react\";\n\nimport {addPostActionCreator, PostType,\n    updateNewPostTextActionCreator\n} from \"../../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../../Redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\ntype MapDispatchToPropsType = {\n    updateNewPostText: (newText: string) => void\n    addPost: (newText: string) => void\n}\n\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType  => ({\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.posts\n})\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => ({\n    updateNewPostText: (newText: string) => {\n        dispatch(updateNewPostTextActionCreator(newText));\n    },\n    addPost: (newText: string) => {\n        dispatch(addPostActionCreator(newText));\n    }\n})\n\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","/Volumes/data/projects/courses/SocialNetwork/src/components/Dialogs/Message/Message.tsx",["142","143"],"import React from \"react\";\nimport s from \"../Dialogs.module.css\";\nimport {MessageType} from \"../../../Redux/dialogsReducer\";\n\n\nfunction Message(props: MessageType) {\n    let newMessageElement = React.createRef<HTMLTextAreaElement>();\n    let addMessage = () => {\n       let text =  newMessageElement.current?.value;\n    }\n    return (\n\n        <div className={s.message}>\n            <div>\n                {props.message}\n            </div>\n            {/*<div>*/}\n            {/*<textarea ref = {addMessage}></textarea>*/}\n            {/*<button onClick={addMessage}>Add</button>*/}\n            {/*</div>*/}\n        </div>\n    )\n\n}\n\nexport default Message;","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/MyPosts.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/MyPost/Post/Post.tsx",["144"],"import React from \"react\";\nimport s from './Post.module.css';\nimport {PostType} from \"../../../../Redux/profileReducer\";\n\n\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.item}>\n            <img\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTCgPWBtcWfGpFd3n6ma11amy6vQwYYZ8oj9A&usqp=CAU'/>\n            {props.message}\n            <div>\n                <span>like </span> {props.likesCount}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Post;","/Volumes/data/projects/courses/SocialNetwork/src/Redux/usersReducer.ts",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Users/UsersContainer.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/components/Users/Users.tsx",["145"],"import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/User_icon.png\";\nimport {UserType} from \"../../Redux/usersReducer\";\nimport {NavLink} from \"react-router-dom\";\n\n\ntype UsersPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    users: Array<UserType>\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n}\n\nfunction Users(props: UsersPropsType) {\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    const pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    return (\n        <div>\n            <div>\n                {pages.map(p => {\n                    return (\n                        <span className={(p === props.currentPage) ? styles.selectedPage : ''}\n                              onClick={() => {\n                                  props.onPageChanged(p)\n                              }}\n                        > {p}</span>\n                    )\n                })}\n\n            </div>\n            {props.users.map(u => <div key={u.id}>\n                    <span>\n                        <div>\n                            <NavLink to = {'/profile/' + u.id}>\n                            <img src={u.photos.small ? u.photos.small : userPhoto} className={styles.userPhoto}/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {u.followed\n                                ? <button onClick={() => {\n                                    props.unfollow(u.id)\n                                }}>Unfollow</button> :\n                                <button onClick={() => {\n                                    props.follow(u.id)\n                                }}>Follow</button>}\n\n                        </div>\n                    </span>\n                    <span>\n                         <span>\n                             <div>{u.name}</div><div>{u.status}</div>\n                         </span>\n                           <span>\n                             <div>{\"u.location.country\"}</div>\n                               <div>{\"u.location.city\"}</div>\n                         </span>\n                    </span>\n                </div>\n            )\n            }\n        </div>\n    )\n}\n\nexport default Users","/Volumes/data/projects/courses/SocialNetwork/src/components/common/preloader/Preloader.tsx",["146"],"import loader from \"../../../assets/images/loader.gif\";\nimport React from \"react\";\n\ntype PreloaderPropsType = {\n\n}\n\nfunction Preloader(props: PreloaderPropsType) {\n    return (\n        <div>\n            <img src={loader}/>\n        </div>\n    )\n}\n\nexport default Preloader;","/Volumes/data/projects/courses/SocialNetwork/src/components/Profile/ProfileContainer.tsx",[],"/Volumes/data/projects/courses/SocialNetwork/src/Redux/authReducer.ts",["147","148"],"/Volumes/data/projects/courses/SocialNetwork/src/components/Header/HeaderContainer.tsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":39,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"157","line":51,"column":9,"nodeType":"155","messageId":"156","endLine":51,"endColumn":18},{"ruleId":"153","severity":1,"message":"158","line":2,"column":22,"nodeType":"155","messageId":"156","endLine":2,"endColumn":40},{"ruleId":"153","severity":1,"message":"159","line":2,"column":42,"nodeType":"155","messageId":"156","endLine":2,"endColumn":69},{"ruleId":"153","severity":1,"message":"160","line":3,"column":9,"nodeType":"155","messageId":"156","endLine":3,"endColumn":29},{"ruleId":"153","severity":1,"message":"161","line":3,"column":31,"nodeType":"155","messageId":"156","endLine":3,"endColumn":61},{"ruleId":"162","severity":1,"message":"163","line":15,"column":13,"nodeType":"164","endLine":15,"endColumn":102},{"ruleId":"153","severity":1,"message":"165","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":9},{"ruleId":"153","severity":1,"message":"166","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"165","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":9},{"ruleId":"162","severity":1,"message":"163","line":15,"column":17,"nodeType":"164","endLine":16,"endColumn":112},{"ruleId":"162","severity":1,"message":"163","line":19,"column":17,"nodeType":"164","endLine":19,"endColumn":89},{"ruleId":"153","severity":1,"message":"166","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"167","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":19},{"ruleId":"153","severity":1,"message":"168","line":9,"column":12,"nodeType":"155","messageId":"156","endLine":9,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":10,"column":13,"nodeType":"164","endLine":11,"endColumn":124},{"ruleId":"162","severity":1,"message":"163","line":42,"column":29,"nodeType":"164","endLine":42,"endColumn":114},{"ruleId":"162","severity":1,"message":"163","line":11,"column":13,"nodeType":"164","endLine":11,"endColumn":32},{"ruleId":"153","severity":1,"message":"169","line":1,"column":9,"nodeType":"155","messageId":"156","endLine":1,"endColumn":22},{"ruleId":"153","severity":1,"message":"170","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","'stateCopy' is assigned a value but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'s' is defined but never used.","'React' is defined but never used.","'addMessage' is assigned a value but never used.","'text' is assigned a value but never used.","'UsersPageType' is defined but never used.","'PostType' is defined but never used.","no-global-assign","no-unsafe-negation"]